daml 1.2
module HackAdemy.Wallet.Karma where

import DA.Time()
import DA.Action() 
import HackAdemy.Wallet.Lang

template KarmaWallet
  with
    owner : Party
    id : WalletId
    provider : Party
    psid : Text
    walletType : WalletType
    amount : Decimal
    creationTime : Time
    modificationTime : Time 
  where
    signatory provider

    ensure id == WalletId with provider, psid, walletType && provider /= owner
    key id : WalletId
    maintainer key.provider

    controller provider can
        nonconsuming Reset_wallet : ContractId KarmaWallet
          with
            resetAmount : Decimal
          do
            now <- getTime
            if walletType == Dead
              then do
                kW <- fetch self
                archive self
                create kW with
                  amount = resetAmount
                  modificationTime = now
              else do
                return self

    controller owner can
      Spend : ContractId KarmaWallet
        with 
          spendAmount : Decimal
        do
          now <- getTime
          let newAmount = amount - spendAmount
          assertMsg "Invalid Coins" (newAmount > 0.0)
          assertMsg "Can only spend from dead coinds" (walletType == Dead)
          create this with
            amount = newAmount
            modificationTime = now