daml 1.2

module HackAdemy.KC.KC where

import HackAdemy.KC.Lang
import HackAdemy.Karma.Karma
import HackAdemy.Karma.Lang

template KC
    with
        status : Status
        courseId : Text
        psid : Text
        operator : Party
        taker : Party
        provider : Party
        id : KCId
        amount : Decimal
        penality : Decimal
        signatories :[Party]
        -------------------------
        creationTime : Time
        modificationTime : Time
    where
        signatory signatories
        
        ensure id == KCId with courseId, psid, operator
        key id : KCId
        maintainer key.operator

        controller taker can
            Cancel_KC : ContractId KC
                do
                    now <- getTime
                    assertMsg "DvP must be in UnSettled State" (status == UnSettled)
                    create this with 
                        status = Cancel
                        modificationTime = now

        controller operator can
            Redeemded_KC : ContractId KC
                do
                    now <- getTime
                    assertMsg "DvP must be in UnSettled State" (status == Cancel)
                    create this with 
                        status = Redeem
                        modificationTime = now
        
        controller provider can
            Approve_KC : (ContractId KC, ContractId Karma)
                do
                    now <- getTime

                    assertMsg "DvP must be in UnSettled State" (status == UnSettled)
                    kCCid <- create this with 
                        modificationTime = now
                        status = Settled
                        signatories = provider :: signatories
                    
                    kid <- create Karma with
                        owner = taker
                        courseProvider = provider
                        point = amount
                        id =  KarmaId with courseId, psid, operator
                        creationTime = now
                        signatories = provider :: signatories
                        ..

                    pure( kCCid, kid)